apiVersion: v1
kind: Service
metadata:
  name: connect-manager
  labels:
    app: connect-manager
spec:
  type: NodePort
  selector:
    app: connect-manager
  ports:
    - port: 8080
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      # if you already have something running locally on this port. comment this line and let K8 select one for you. Please make
      # sure you just change this port from other references if you have any.
      nodePort: 30838
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect-manager
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: connect-manager
  template:
    metadata:
      labels:
        app: connect-manager
    spec:
      containers:
        - name: connect-manager
          image: localbuild/connect-manager:5.5.1-5.5.0
          imagePullPolicy: Never
          env: 
            - name: SOURCE_GITHUB_TOKEN
              value: 0e6459c5e7df27f3f03266e68b99234ce8114d6c
            # - name: CONNECT_TRUSTSTORE_FILE
            #   value: /etc/kafka/secrets/kafka.connect-manager.truststore.jks
            - name: CONNECT_HOST
              value: https://grumpy-frog-61.loca.lt
              # put it into secret and use `valueFrom` instead of `value`
              # valueFrom:
              #   secretKeyRef:
              #     name: mysql-pass
              #     key: password
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: connect-manager-persistent-storage
              mountPath: /etc/kafka/secrets
      volumes:
        - name: connect-manager-persistent-storage
          persistentVolumeClaim:
            claimName: task-pv-claim